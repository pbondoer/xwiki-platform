<?xml version='1.1' encoding='UTF-8'?>
<xwikidoc version="1.3" reference="XWiki.LiveTableDBListFilterService" locale="">
  <web>XWiki</web>
  <name>LiveTableDBListFilterService</name>
  <language/>
  <defaultLanguage>en</defaultLanguage>
  <translation>0</translation>
  <creator>XWiki.Admin</creator>
  <creationDate>1496336171000</creationDate>
  <author>XWiki.Admin</author>
  <contentAuthor>XWiki.Admin</contentAuthor>
  <date>1497000123000</date>
  <contentUpdateDate>1496999359000</contentUpdateDate>
  <version>1.162</version>
  <title/>
  <comment/>
  <minorEdit>true</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <content>{{velocity wiki="false"}}&#xd;
#set($reqClass = "$!request.get('class')")&#xd;
#set($reqProp = "$!request.get('prop')")&#xd;
#set($reqInput = "$!request.get('input')")&#xd;
#set($reqLimit = "$!request.get('limit')")&#xd;
#if ($reqLimit != '')&#xd;
  #set ($limit = $numbertool.integer($reqLimit))&#xd;
#else&#xd;
  ## The limit is hardcoded here, as we are only dealing with suggestions&#xd;
  #set ($limit = 25)&#xd;
#end&#xd;
#if ($reqClass != '' &amp;&amp; $reqProp != '' &amp;&amp; $reqInput != '')&#xd;
  #set ($discard = $response.setContentType('application/json'))&#xd;
  #set ($classRef = $xwiki.getClass($reqClass))&#xd;
  #set ($field = $classRef.get($reqProp))&#xd;
  #if ($field.classType == 'DBList')&#xd;
    #set ($sql = $!field.getProperty('sql').value)&#xd;
    #set ($results = [])&#xd;
    #if ($sql == '')&#xd;
      ## Use SOLR&#xd;
      #set ($dbId = "$!field.getProperty('idField').value")&#xd;
      #set ($dbValue = "$!field.getProperty('valueField').value")&#xd;
      #set ($dbClass = $services.model.serialize("$!field.getProperty('classname').value", 'solr'))&#xd;
      #set ($solr = "property.${dbClass}.${dbValue}:$reqInput")&#xd;
      #set ($query = $services.query.createQuery($solr, 'solr'))&#xd;
      #set ($discard = $query.bindValue('fq', "type:DOCUMENT class:$dbClass"))&#xd;
      #set ($discard = $query.setLimit($limit))&#xd;
      #foreach ($obj in $query.execute()[0].results)&#xd;
        #set ($res = {&#xd;
          'id': $obj.getFieldValue("property.${dbClass}.${dbId}_string"),&#xd;
          'name': $obj.getFieldValue("property.${dbClass}.${dbValue}_string")&#xd;
        })&#xd;
        #set($discard = $results.add($res))&#xd;
      #end&#xd;
    #else&#xd;
      ## Use HQL as there is a query present&#xd;
      #set ($sql = $sql + " AND UPPER(doc.title) LIKE UPPER(:input)")&#xd;
      #set ($query = $services.query.hql($sql))&#xd;
      #set ($discard = $query.bindValue('input', "%$reqInput%"))&#xd;
      #set ($discard = $query.setLimit($limit))&#xd;
      #foreach ($obj in $query.execute())&#xd;
        #set ($res = {&#xd;
          'id': $obj[0],&#xd;
          'name': $obj[1]&#xd;
        })&#xd;
        #set($discard = $results.add($res))&#xd;
      #end&#xd;
    #end&#xd;
  #end&#xd;
  $jsontool.serialize($results)&#xd;
#end&#xd;
{{/velocity}}&#xd;
&#xd;
{{velocity}}&#xd;
#if ($reqClass == '' || $reqProp == '')&#xd;
  {{info}}&#xd;
    This service provides filtering results for the LiveTable.&#xd;
  {{/info}}&#xd;
#end&#xd;
{{/velocity}}</content>
</xwikidoc>